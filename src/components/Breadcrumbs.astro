---
// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");

const pathMap: Record<string, string> = {
  posts: "article",
  tags: "tag",
  about: "about me",
  search: "search",
};

const linkMap: Record<string, string> = {
  tag: "tags",
};

// Get url array from path
// eg: /tags/tailwindcss => ['tags', 'tailwindcss']
const breadcrumbList = currentUrlPath
  .split("/")
  .slice(1)
  .map(path => {
    return decodeURIComponent(pathMap[path] || path);
  });

breadcrumbList[0] === "article" && breadcrumbList.splice(0, 2, `article`);
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href="/">Home</a>
      <span aria-hidden="true">&nbsp;&#62;&nbsp;</span>
    </li>
    {
      breadcrumbList.map((breadcrumb, index) =>
        index + 1 === breadcrumbList.length ? (
          <li>
            <span
              class={`${index > 0 ? "lowercase" : "capitalize"}`}
              aria-current="page"
            >
              {/* make the last part lowercase in Home > Tags > some-tag */}
              {breadcrumb}
            </span>
          </li>
        ) : (
          <li>
            <a href={`/${linkMap[breadcrumb]}`}>{breadcrumb}</a>
            <span aria-hidden="true">&nbsp;&#62;&nbsp;</span>
          </li>
        )
      )
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mt-8 mb-1 w-full max-w-3xl px-4;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply capitalize opacity-70 transition-all;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
  .breadcrumb ul li:not(:last-child) a {
    @apply hover:opacity-100;
  }
</style>
